// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "95de7762-adb9-4b4c-a165-6ca66a98f844";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onThresholdLevelChange();

float moisture_val;
float moisture_val2;
float room_temperature;
int mapped_level;
int moisture_percent;
int moisture_percent2;
int room_humidity;
int threshold_level;
int water_level;
int waterpump_count;
bool pump_status;
bool wl_warning;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(moisture_val, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(moisture_val2, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(room_temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(mapped_level, READ, ON_CHANGE, NULL, 1);
  ArduinoCloud.addProperty(moisture_percent, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(moisture_percent2, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(room_humidity, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(threshold_level, READWRITE, ON_CHANGE, onThresholdLevelChange);
  ArduinoCloud.addProperty(water_level, READ, 60 * SECONDS, NULL);
  ArduinoCloud.addProperty(waterpump_count, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(pump_status, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(wl_warning, READ, ON_CHANGE, NULL);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
